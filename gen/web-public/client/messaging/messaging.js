// Generated by CoffeeScript 1.9.0
(function() {
  var MessageReaderController;

  module.exports = MessageReaderController = function($scope, $http, $interval) {
    $scope.filterMembersByLocation = function() {
      var allowedLocations, _base;
      if ($scope.settings.locationFilter) {
        if ((_base = $scope.settings).location == null) {
          _base.location = '';
        }
        allowedLocations = $scope.settings.locations.toLowerCase().split(' ');
        return $scope.members = _.filter($scope.allMembers, function(m) {
          var common, words, _ref;
          words = (_ref = m.location) != null ? _ref.toLowerCase().split(/[\s,;]/) : void 0;
          common = _.intersection(allowedLocations, words);
          return common.length > 0;
        });
      } else {
        return $scope.members = $scope.allMembers;
      }
    };
    $scope.getProfilesToRespond = function() {
      return $http.get("http://localhost:3000/messaging/getProfilesToRespond").success(function(data, status, headers, config) {
        if (data.status === 'ok') {
          $scope.allMembers = _.sortBy(data.profiles, function(member) {
            return member.id;
          });
          return $scope.filterMembersByLocation();
        } else if (data.status === 'error') {
          $scope.message = data.message;
          return $interval.cancel(window.checkInboxTimer);
        }
      });
    };
    $scope.respond = function(member) {
      return $http.post("http://localhost:3000/messaging/sendMessage/" + member.website + "/" + member.id, {
        message: $scope.response[member.id]
      }).success(function(data, status, headers, config) {
        return $scope.members = _.filter($scope.members, function(m) {
          return m.id !== member.id;
        });
      });
    };
    $scope.block = function(member) {
      return $http.get("http://localhost:3000/messaging/blockProfile/" + member.website + "/" + member.id).success(function(data, status, headers, config) {
        return $scope.members = _.filter($scope.members, function(m) {
          return m.id !== member.id;
        });
      });
    };
    $scope.saveSettings = function() {
      return $http.post("http://localhost:3000/messaging/setSettings", {
        locations: $scope.settings.locations,
        locationFilter: $scope.settings.locationFilter
      });
    };
    if (window.user === void 0) {
      return $location.path('');
    } else {
      if (window.response == null) {
        window.response = {};
      }
      $scope.response = window.response;
      $scope.settings = window.user.settings;
      $scope.getProfilesToRespond();
      window.checkInboxTimer = $interval((function(_this) {
        return function() {
          return $scope.getProfilesToRespond();
        };
      })(this), 30000);
      return $scope.$on("$destroy", function() {
        return $interval.cancel(window.checkInboxTimer);
      });
    }
  };

  MessageReaderController.$inject = ['$scope', '$http', '$interval'];

}).call(this);
