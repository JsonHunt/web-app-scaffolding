// Generated by CoffeeScript 1.9.2
(function() {
  module.exports = [
    '$scope', function($scope) {
      $scope.gotoPage('search');
      $scope.providerProfileController = require('./../provider-profile/provider-profile');
      $scope.businessProfileController = require('./../business-profile/business-profile');
      setTimeout(function() {
        return $('#location-search').focus();
      }, 100);
      google.maps.event.addDomListener(window, 'load', function() {
        return console.log("Maps loaded");
      });
      setTimeout(function() {
        var canvas, mapOptions;
        canvas = document.getElementById('mapCanvas');
        mapOptions = {
          center: {
            lat: 0,
            lng: 0
          },
          zoom: 8
        };
        $scope.geoCoder = new google.maps.Geocoder();
        $scope.map = new google.maps.Map(canvas, mapOptions);
        if (navigator.geolocation) {
          return navigator.geolocation.getCurrentPosition(function(position) {
            var userLocation;
            console.log(JSON.stringify(position));
            userLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            return $scope.geoCoder.geocode({
              location: userLocation
            }, function(results, status) {
              var i, len, place, ref, results1;
              console.log(status);
              console.log(JSON.stringify(results[0]));
              results1 = [];
              for (i = 0, len = results.length; i < len; i++) {
                place = results[i];
                if ((_.contains(place.types, 'country')) && (((ref = place.geometry) != null ? ref.viewport : void 0) !== void 0)) {
                  $scope.map.fitBounds(place.geometry.viewport);
                  results1.push($scope.loadCirclesForPlace(place));
                } else {
                  results1.push(void 0);
                }
              }
              return results1;
            });
          });
        }
      }, 0);
      $scope.search = {
        places: void 0
      };
      $scope.$watch('search.places', function(place) {
        if (place === void 0 || place.geometry === void 0) {
          return;
        }
        if (place.geometry.viewport) {
          $scope.map.fitBounds(place.geometry.viewport);
          $scope.map.panToBounds(place.geometry.viewport);
        } else if (place.geometry.location) {
          $scope.map.panTo(place.geometry.location);
          $scope.map.setZoom(12);
        }
        if (place.geometry.location) {
          $scope.area = place.formatted_address;
          return $scope.loadCirclesForPlace(place);
        }
      });
      $scope.onMarkerClick = function() {
        return $scope.page = 'provider-profile';
      };
      $scope.circles = [];
      return $scope.loadCirclesForPlace = function(place) {
        var c, circle, i, len, ref;
        ref = $scope.circles;
        for (i = 0, len = ref.length; i < len; i++) {
          c = ref[i];
          c.setMap(null);
        }
        circle = new google.maps.Circle({
          center: place.geometry.location,
          radius: 1000,
          map: $scope.map,
          strokeWeight: 0,
          fillColor: '#e18882',
          fillOpacity: 0.4,
          click: function(event) {}
        });
        $scope.circles.push(circle);
        return google.maps.event.addListener(circle, 'click', function(event) {
          return $scope.$apply(function() {
            return $scope.area = place.formatted_address;
          });
        });
      };
    }
  ];

}).call(this);
